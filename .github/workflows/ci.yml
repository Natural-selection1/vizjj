name: "ci"

on:
  pull_request:
    branches:
      - master

jobs:
  frontend-check:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: install packages
        run: bun install --package-lock=false

      - name: run svelte check
        run: bun run check

      - name: check frontend formatting
        run: bun run fmt:ci

  rust-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - uses: awalsh128/cache-apt-pkgs-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          version: 1.0

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri"
          key: ${{ matrix.target }}

      - name: check rust formatting
        if: matrix.os == 'ubuntu-latest'
        run: cd src-tauri && cargo fmt --check

      - name: check rust linting
        run: bun run clippy:ci

      - name: run tests
        run: bun run test
